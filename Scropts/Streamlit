# Streamlit app(app.py)

import streamlit as st
import joblib
import pandas as pd

# Load the trained model
model = joblib.load("insurance_model.pkl")

st.title("Insurance Premium Prediction")
st.write("Enter the details below to predict your insurance premium.")

# Input fields
age = st.number_input("Age", min_value=18, max_value=100, value=30)
diabetes = st.selectbox("Do you have Diabetes?", ("Yes", "No"))
bp = st.selectbox("Do you have Blood Pressure Problems?", ("Yes", "No"))
transplants = st.selectbox("Any Organ Transplants?", ("Yes", "No"))
chronic = st.selectbox("Any Chronic Diseases?", ("Yes", "No"))
height = st.number_input("Height (in cm)", min_value=100, max_value=250, value=170)
weight = st.number_input("Weight (in kg)", min_value=30, max_value=200, value=70)
allergies = st.selectbox("Known Allergies?", ("Yes", "No"))
cancer_history = st.selectbox("History of Cancer in Family?", ("Yes", "No"))
surgeries = st.number_input("Number of Major Surgeries", min_value=0, max_value=10, value=0)
bmi = st.number_input("BMI", min_value=10.0, max_value=50.0, value=24.0)
risk_score = st.number_input("Risk Score", min_value=0, max_value=100, value=10)

# Convert categorical to numeric
def encode_binary(value):
    return 1 if value == "Yes" else 0

input_data = pd.DataFrame([{
    "Age": age,
    "Diabetes": encode_binary(diabetes),
    "BloodPressureProblems": encode_binary(bp),
    "AnyTransplants": encode_binary(transplants),
    "AnyChronicDiseases": encode_binary(chronic),
    "Height": height,
    "Weight": weight,
    "KnownAllergies": encode_binary(allergies),
    "HistoryOfCancerInFamily": encode_binary(cancer_history),
    "NumberOfMajorSurgeries": surgeries,
    "BMI": bmi,
    "Risk_Score": risk_score
}])

if st.button("Predict Premium"):
    prediction = model.predict(input_data)[0]
    st.success(f" Predicted Insurance Premium: â‚¹ {prediction:,.2f}")
